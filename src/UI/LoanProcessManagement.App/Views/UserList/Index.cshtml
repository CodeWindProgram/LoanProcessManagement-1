@model IEnumerable<LoanProcessManagement.Application.Features.UserList.Query.GetUserListQueryVm>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData["Title"] = "Index";
    bool Issuccesflag = (TempData["Issuccesflag"]) !=null ? Convert.ToBoolean(TempData["Issuccesflag"]) : false;
    string Message = TempData["Message"] != null ? TempData["Message"].ToString() : TempData["Message"] + "";
}
<style>
    .panel-heading {

        color: white;
        background-color: #343a40;
        border-bottom: 1px solid rgba(0,0,0,.125);
        padding: 0.75rem 1.25rem;
        position: relative;
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        vertical-align: middle;
        margin-block: 6px !important;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {

            position: absolute;
            content: "";
            height: 15px;
            width: 15px;
            left: 0px;
            bottom: 2px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        /*transform: translateX(26px);*/
        transform: translateX(23px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 15px;
        width: 40px;
        height: 18px;
    }

    .slider.round:before {
        border-radius: 50%;
    }

    table.dataTable tbody th, table.dataTable tbody td {
        padding: 0px 1px;
    }
</style>
<div class="container app">
    <div class="col-sm-12">
        <div data-effect="helix" id="panels" class="panel panel-info effect-helix in" style="transition: all 0.7s ease-in-out 0s">
            <div class="panel-heading"><h3>User List</h3></div>
            <div class="panel-body">
      
                <div class="border-part">
                    @if(Issuccesflag)
                    {
                        <div class="alert alert-success" role="alert">
                            <p>@Message</p>
                        </div>
                    }
                    @*else
                    {
                        <div class="alert alert-danger" role="alert">
                            <strong>Error!</strong>
                        </div>

                    }*@
                    <div id="alertMsg" visible="false" runat="server">
                        <asp:Label ID="lblAlert" runat="server" Style="color: red"></asp:Label>
                        <div style="margin-bottom: 10px"></div>
                    </div>
                    <div>
                         <select id="ddl_Filter" class="form-control col-sm-2">
                             <option value="">Select</option>
                             <option value="All">All</option>
                             <option value="Locked">Locked Users</option>
                             <option value="Deactivated">Deactivated Users</option>
                         </select>
                    </div><br />
                    <table id="tblUserList" class="display">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.SerialNumber)
                                </th>
                                <th style="display : none">
                                    @Html.DisplayNameFor(model => model.LgId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EmployeeId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Email)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.BranchName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PhoneNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.IsLocked)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.IsActive)
                                </th>
                                <th style="display : none">
                                    @Html.DisplayNameFor(model => model.StaffType)
                                </th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SerialNumber)
                                    </td>
                                    <td style="display : none">
                                        @Html.DisplayFor(modelItem => item.LgId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EmployeeId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BranchName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    </td>
                                    <td>

                                        @{
                                            if (item.IsLocked == true)
                                            {
                                                <label class="switch">
                                                    <input type="checkbox" id="chkQuery" checked onchange="checkUncheckUnlockUser(this, '@item.EmployeeId')">
                                                    <span class="slider round" data-on="Yes" data-off="No"></span>
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="switch">
                                                    <input type="checkbox" id="chkQuery" onchange="checkUncheckUnlockUser(this, '@item.EmployeeId')">
                                                    <span class="slider round" data-on="Yes" data-off="No"></span>
                                                </label>
                                            }

                                        }
                                    </td>
                                    <td>
                                        @{
                                            if (item.IsActive == true)
                                            {
                                                <label class="switch">
                                                    <input type="checkbox" id="chkQuery" checked onchange="checkUncheckActiveUser(this, '@item.EmployeeId')">
                                                    <span class="slider round" data-on="Yes" data-off="No"></span>
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="switch">
                                                    <input type="checkbox" id="chkQuery" onchange="checkUncheckActiveUser(this, '@item.EmployeeId')">
                                                    <span class="slider round" data-on="Yes" data-off="No"></span>
                                                </label>
                                            }
                                        }
                                    </td>
                                    <td style="display : none">
                                        @Html.DisplayFor(modelItem => item.StaffType)
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.ActionLink("Modify", "UpdateUser", "Login", new { lgid = item.LgId }, new { @Class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Delete", "RemoveUser", "Login", new { lgid = item.LgId },
                                       new { onclick = "return confirm('Are you sure you want to delete ?');", @Class = "btn btn-danger btn-sm" })
                                        @*<a asp-action="RemoveUser" id="deleteBtn" asp-route-lgid="item.LgId">Delete</a>*@

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        var usrTable = $('#tblUserList').dataTable({
            "oLanguage": {
                "sZeroRecords": "No Records to Display",
                "sSearch": "Search "
            },
            "iDisplayLength": 15,
            "aLengthMenu": [[25, 50, 100, 200, 500], [25, 50, 100, 200, 500]],
            "bSortClasses": false,
            "bPaginate": true,
            "bAutoWidth": false,
            "bProcessing": true,
            "bDestroy": true,
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
        });
    });

    function checkUncheckUnlockUser(r, empId) {
        //debugger
        var checkStatus = $(r).prop("checked") ? 'True' : 'False';
        $.ajax({
            type: "POST",
            url: '@Url.Action("UnlockUserAccountOnToggleSwitch", "Login")',
            data: {
                EmployeeId: empId,
                IsLocked: checkStatus
            },
            dataType: 'json',
            success: function (result) {
                if (result) {
                    console.log("Ok");
                } else {
                    console.log("error");
                }
            },
            error: function () {
                console.log('something went wrong - debug it!');
            }
        })
    }

    function checkUncheckActiveUser(r, empId) {
        //debugger
        var checkStatus = $(r).prop("checked") ? 'True' : 'False';
        $.ajax({
            type: "POST",
            url: '@Url.Action("ActivateUserAccountOnToggleSwitch", "Login")',
            data: {
                EmployeeId: empId,
                IsActive: checkStatus
            },
            dataType: 'json',
            success: function (result) {
                if (result) {
                    console.log("Ok");
                } else {
                    console.log("error");
                }
            },
            error: function () {
                console.log('something went wrong - debug it!');
            }
        })
    }

    $(document).ready(function () {
        debugger
        $("#ddl_Filter").change(function () {
            var selectedFilter = $(this).children("option:selected").val();
            if (selectedFilter == 'All') {
                $.ajax({
                type: "GET",
                url: '@Url.Action("Index", "UserList")',
                dataType: 'json',
                success: function (result) {
                    if (result) {
                        console.log("Ok");
                    } else {
                        console.log("error");
                    }
                },
                error: function () {
                    console.log('something went wrong - debug it!');
                }
                })
            } @*else if (selectedFilter == 'Locked') {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetLockedUserList", "UserList")',
                    dataType: 'json',
                    success: function (result) {
                        if (result) {
                            console.log("Ok");
                        } else {
                            console.log("error");
                        }
                    },
                    error: function () {
                        console.log('something went wrong - debug it!');
                    }
                })
            }*@
        });
    });
</script>