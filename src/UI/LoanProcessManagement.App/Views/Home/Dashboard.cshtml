@model LoanProcessManagement.Application.Features.LeadStatus.Queries.GetLeadStatusCountDto
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Home";
}


<style>
    .colors {
        background-color: #f56954;
        height: 15px;
        width: 15px;
    }
</style>

<!-- Main content -->
<section class="content">
    <!-- /.container-fluid -->
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@Model.ConvertedLeadCount</h3>
                        <p>No. of Login Files</p>
                    </div>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>@Model.SanctionedCount</h3>
                        <p>Final Sanction</p>
                    </div>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@Model.DisbursedCount</h3>
                        <p>Disbursement</p>
                    </div>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3>@Model.LostAndRejectCount</h3>
                        <p>Lost/Rejected</p>
                    </div>                   
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- /.row -->
        <!-- Main row -->
        <div class="row">
            <!-- Left col -->
            <section class="col-lg-6 connectedSortable ui-sortable">
                <!-- Custom tabs (Charts with tabs)-->
                <div class="card card-danger">
                    <div class="card-header">
                        <h3 class="card-title">Lead Analysis</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-tool" data-card-widget="remove">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart1" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>

            </section>
            <section class="col-lg-6 connectedSortable ui-sortable">
                <!-- Custom tabs (Charts with tabs)-->
                <div class="card card-success">
                    <div class="card-header">
                        <h3 class="card-title">Disbursement Ratio</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-tool" data-card-widget="remove">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="lineChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                </div>
            </section>
            <div>

            </div>

        </div>
    </div>
</section>

<script>

    $(function () {
            var donutData = {
                labels: [
                    "Branch Data Entry (@Model.BranchDataEntryCount)",
                    "HO(In-Principal Sanction (@Model.HOInPrinSanCount)",
                    "Branch Processing (@Model.BranchProcessingCount)",
                    "Lost Lead/Reject Lead (@Model.LostAndRejectCount)",
                    "Disbursement (@Model.DisbursedCount)",
                ],
                datasets: [
                    {
                        data: ['@Model.BranchDataEntryCount', '@Model.HOInPrinSanCount',
                            '@Model.BranchProcessingCount', '@Model.LostAndRejectCount', '@Model.DisbursedCount'],
                        backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc'],
                    }
                ]
            }
            // Get context with jQuery - using jQuery's .get() method.
            var pieChartCanvas = $('#pieChart1').get(0).getContext('2d')
            var lineChart = $('#lineChart').get(0).getContext('2d')

            var pieData = donutData;
            var pieOptions = {
                maintainAspectRatio: false,
                animationEnabled: true,
                exportEnabled: true,
                theme: "light2",
                responsive: true,
                legend: {
                    position: 'bottom',
                },
            }
            new Chart(pieChartCanvas, {
                type: 'pie',
                data: pieData,
                options: pieOptions
            })

            @*var myChart = new Chart(lineChart, {
                type: 'line',
                data: {
                    labels: ['@ViewBag.lastSixMonths[0]', '@ViewBag.lastSixMonths[1]', '@ViewBag.lastSixMonths[2]',
                        '@ViewBag.lastSixMonths[3]', '@ViewBag.lastSixMonths[4]', '@ViewBag.lastSixMonths[5]'],
                    datasets: [{
                        label: 'Disbursement', // Name the series
                        data: ['@ViewBag.LoanAmounts[0]', '@ViewBag.LoanAmounts[1]', '@ViewBag.LoanAmounts[2]', '@ViewBag.LoanAmounts[3]', '@ViewBag.LoanAmounts[4]', '@ViewBag.LoanAmounts[5]'], // Specify the data values array
                        fill: false,
                        borderColor: '#2196f3', // Add custom color border (Line)
                        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)
                        borderWidth: 1 // Specify bar border width
                    }]
                },
                options: {
                    responsive: true, // Instruct chart js to respond nicely.
                    maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height
                    scales: {
                        yAxes: [{
                            ticks: {
                                callback: function (val, index, array) {
                                    if (val >= 10000000) val = (val / 10000000).toFixed(2) + ' Cr';
                                    else if (val >= 100000) val = (val / 100000).toFixed(2) + ' Lac';
                                    else if (val >= 1000) val = (val / 1000).toFixed(2) + ' K';
                                    return val;
                                }
                            }
                        }]
                    }
                }
            });*@
        var myChart = new Chart(lineChart, {
                type: 'line',
                data: {
                    labels: ['@ViewBag.lastSixMonths[0]', '@ViewBag.lastSixMonths[1]', '@ViewBag.lastSixMonths[2]',
                        '@ViewBag.lastSixMonths[3]', '@ViewBag.lastSixMonths[4]', '@ViewBag.lastSixMonths[5]'],
                    datasets: [{
                        label: 'Disbursement', // Name the series
                        data: [12000000,9800000,10000000,5500000,6700000,10000000], // Specify the data values array
                        fill: false,
                        borderColor: '#2196f3', // Add custom color border (Line)
                        backgroundColor: '#2196f3', // Add custom color background (Points and Fill)
                        borderWidth: 1 // Specify bar border width
                    }]
                },
                options: {
                    responsive: true, // Instruct chart js to respond nicely.
                    maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height
                    scales: {
                        yAxes: [{
                            ticks: {
                                callback: function (val, index, array) {
                                    if (val >= 10000000) val = (val / 10000000).toFixed(2) + ' Cr';
                                    else if (val >= 100000) val = (val / 100000).toFixed(2) + ' Lac';
                                    else if (val >= 1000) val = (val / 1000).toFixed(2) + ' K';
                                    return val;
                                }
                            }
                        }]
                    }
                }
            });
        });
</script>
