// <auto-generated />
using System;
using LoanProcessManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanProcessManagement.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211130091031_Initial_14")]
    partial class Initial_14
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Concerts"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Musicals"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Plays"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Conferences"
                        });
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            Artist = "John Egbert",
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 5, 30, 14, 40, 31, 103, DateTimeKind.Local).AddTicks(3076),
                            Description = "Join John for his farwell tour across 15 continents. John really needs no introduction since he has already mesmerized the world with his banjo.",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/banjo.jpg",
                            Name = "John Egbert Live",
                            Price = 65
                        },
                        new
                        {
                            EventId = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            Artist = "Michael Johnson",
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 8, 30, 14, 40, 31, 104, DateTimeKind.Local).AddTicks(9876),
                            Description = "Michael Johnson doesn't need an introduction. His 25 concert across the globe last year were seen by thousands. Can we add you to the list?",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/michael.jpg",
                            Name = "The State of Affairs: Michael Live!",
                            Price = 85
                        },
                        new
                        {
                            EventId = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            Artist = "DJ 'The Mike'",
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 3, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(55),
                            Description = "DJs from all over the world will compete in this epic battle for eternal fame.",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/dj.jpg",
                            Name = "Clash of the DJs",
                            Price = 85
                        },
                        new
                        {
                            EventId = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            Artist = "Manuel Santinonisi",
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 3, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(106),
                            Description = "Get on the hype of Spanish Guitar concerts with Manuel.",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/guitar.jpg",
                            Name = "Spanish guitar hits with Manuel",
                            Price = 25
                        },
                        new
                        {
                            EventId = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                            Artist = "Many",
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 9, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(148),
                            Description = "The best tech conference in the world",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/conf.jpg",
                            Name = "Techorama 2021",
                            Price = 400
                        },
                        new
                        {
                            EventId = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            Artist = "Nick Sailor",
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 7, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(196),
                            Description = "The critics are over the moon and so will you after you've watched this sing and dance extravaganza written by Nick Sailor, the man from 'My dad and sister'.",
                            ImageUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/GloboTicket/musical.jpg",
                            Name = "To the Moon and Back",
                            Price = 135
                        });
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LPMGSTEnquiryDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcelFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FormNoId")
                        .HasColumnType("bigint");

                    b.Property<string>("GstNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Lead_IdId")
                        .HasColumnType("bigint");

                    b.Property<int>("MobileNo")
                        .HasColumnType("int");

                    b.Property<string>("PdfFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reinitiated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FormNoId");

                    b.HasIndex("Lead_IdId");

                    b.ToTable("LPMGSTEnquiryDetails");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmBranchMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("branchname")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LpmBranchMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadApplicantsDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AadharId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("DrivingLiscenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GstNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfBankAccounts")
                        .HasColumnType("int");

                    b.Property<string>("PanCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RationCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("lead_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("lead_Id");

                    b.ToTable("LpmLeadApplicantsDetails");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnnualTurnOverInLastFy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Appointment_Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Conversion_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrentStatus")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerOfficePincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerOfficeaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone_Alternate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerResidencePincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerResidenceaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disbursal_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExemptedCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoggleLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoggleLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry_Major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsApplicantExemptedFromGst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPropertyIdentified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IsSanctionedPlanReceivedID")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lead_assignee_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LostLeadComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LostLeadReasonID")
                        .HasColumnType("bigint");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PropertyID")
                        .HasColumnType("bigint");

                    b.Property<string>("PropertyPincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyUnderConstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RejectLeadReasonID")
                        .HasColumnType("bigint");

                    b.Property<string>("RejectedLeadComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sale_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SchemeID")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeOfFirms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lead_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CurrentStatus");

                    b.HasIndex("IsSanctionedPlanReceivedID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PropertyID");

                    b.HasIndex("SchemeID");

                    b.ToTable("LpmLeadMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadProcessCycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CurrentStatus")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfAction")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsuranceAmount")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsuranceProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LoanAmount")
                        .HasColumnType("bigint");

                    b.Property<long?>("LoanProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("lead_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStatus");

                    b.HasIndex("InsuranceProductID");

                    b.HasIndex("LoanProductID");

                    b.HasIndex("lead_Id");

                    b.ToTable("LpmLeadProcessCycles");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadQuery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSQueryType_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSResponseType1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSResponseType2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSResponseType3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSResponseType4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSResponseType5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Query_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Query_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Query_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("Tat")
                        .HasColumnType("int");

                    b.Property<long>("lead_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("lead_Id");

                    b.ToTable("LpmLeadQuerys");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadStatusMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SerialOrder")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LpmLeadStatusMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanProductMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProducDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LpmLoanProductMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanProductSchemeMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<long>("SchemeID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("SchemeID");

                    b.ToTable("LpmLoanProductSchemeMappings");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanPropertyType", b =>
                {
                    b.Property<long>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyID");

                    b.ToTable("LpmLoanPropertyTypes");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanSanctionedPlan", b =>
                {
                    b.Property<long>("IsSanctionedPlanReceivedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsSanctionedPlanReceivedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IsSanctionedPlanReceivedID");

                    b.ToTable("LpmLoanSanctionedPlans");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanSchemeMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LpmLoanSchemeMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmMenuMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LgId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LpmMenuMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmUserMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("LeadCount")
                        .HasColumnType("int");

                    b.Property<string>("LgId")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaleType")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SaltKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StaffType")
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("UserRoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("WrongLoginAttempt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("LpmUserMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmUserRoleMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Rolename")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LpmUserRoleMasters");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmUserRoleMenuMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserRoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("LpmUserRoleMenuMaps");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e94bc5b-71a5-4c8c-bc3b-71bb7976237e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(2200),
                            OrderTotal = 400,
                            UserId = new Guid("a441eb40-9636-4ee6-be49-a66c5ec1330b")
                        },
                        new
                        {
                            Id = new Guid("86d3a045-b42d-4854-8150-d6a374948b6e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3664),
                            OrderTotal = 135,
                            UserId = new Guid("ac3cfaf5-34fd-4e4d-bc04-ad1083ddc340")
                        },
                        new
                        {
                            Id = new Guid("771cca4b-066c-4ac7-b3df-4d12837fe7e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3756),
                            OrderTotal = 85,
                            UserId = new Guid("d97a15fc-0d32-41c6-9ddf-62f0735c4c1c")
                        },
                        new
                        {
                            Id = new Guid("3dcb3ea0-80b1-4781-b5c0-4d85c41e55a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3801),
                            OrderTotal = 245,
                            UserId = new Guid("4ad901be-f447-46dd-bcf7-dbe401afa203")
                        },
                        new
                        {
                            Id = new Guid("e6a2679c-79a3-4ef1-a478-6f4c91b405b6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3845),
                            OrderTotal = 142,
                            UserId = new Guid("7aeb2c01-fe8e-4b84-a5ba-330bdf950f5c")
                        },
                        new
                        {
                            Id = new Guid("f5a6a3a0-4227-4973-abb5-a63fbe725923"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3892),
                            OrderTotal = 40,
                            UserId = new Guid("f5a6a3a0-4227-4973-abb5-a63fbe725923")
                        },
                        new
                        {
                            Id = new Guid("ba0eb0ef-b69b-46fd-b8e2-41b4178ae7cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 11, 30, 14, 40, 31, 105, DateTimeKind.Local).AddTicks(3934),
                            OrderTotal = 116,
                            UserId = new Guid("7aeb2c01-fe8e-4b84-a5ba-330bdf950f5c")
                        });
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.Event", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LPMGSTEnquiryDetail", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadMaster", "FormNo")
                        .WithMany()
                        .HasForeignKey("FormNoId");

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadMaster", "Lead_Id")
                        .WithMany()
                        .HasForeignKey("Lead_IdId");
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadApplicantsDetails", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadMaster", "LpmLeadMaster")
                        .WithMany("LpmLeadApplicantsDetails")
                        .HasForeignKey("lead_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadMaster", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmBranchMaster", "Branch")
                        .WithMany("LpmLeadMasters")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadStatusMaster", "LeadStatus")
                        .WithMany("LpmLeadMasters")
                        .HasForeignKey("CurrentStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanSanctionedPlan", "SanctionedPlans")
                        .WithMany("LpmLeadMaster")
                        .HasForeignKey("IsSanctionedPlanReceivedID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanProductMaster", "Product")
                        .WithMany("LpmLeadMasters")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanPropertyType", "PropertyTypes")
                        .WithMany("LpmLeadMaster")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanSchemeMaster", "LoanSchemes")
                        .WithMany("LpmLeadMasters")
                        .HasForeignKey("SchemeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadProcessCycle", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadStatusMaster", "LeadStatus")
                        .WithMany("LpmLeadProcessCycle")
                        .HasForeignKey("CurrentStatus")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanProductMaster", "InsuranceProduct")
                        .WithMany("InsuranceProducts")
                        .HasForeignKey("InsuranceProductID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanProductMaster", "LoanProduct")
                        .WithMany("LoanProducts")
                        .HasForeignKey("LoanProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadMaster", "lead")
                        .WithMany("LpmLeadProcessCycle")
                        .HasForeignKey("lead_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLeadQuery", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLeadMaster", "lead")
                        .WithMany("leadquery")
                        .HasForeignKey("lead_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmLoanProductSchemeMapping", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanProductMaster", "LpmLoanProductMaster")
                        .WithMany("LpmLoanProductSchemeMappings")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmLoanSchemeMaster", "LpmLoanSchemeMaster")
                        .WithMany("LpmLoanProductSchemeMappings")
                        .HasForeignKey("SchemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmUserMaster", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmBranchMaster", "Branch")
                        .WithMany("LpmUserMasters")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmUserRoleMaster", "UserRole")
                        .WithMany("LpmUserMasters")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanProcessManagement.Domain.Entities.LpmUserRoleMenuMap", b =>
                {
                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmMenuMaster", "MenuName")
                        .WithMany("LpmUserRoleMenuMaps")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanProcessManagement.Domain.Entities.LpmUserRoleMaster", "UserRole")
                        .WithMany("LpmUserRoleMenuMaps")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
